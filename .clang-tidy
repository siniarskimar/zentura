Checks: 'clang-diagnostic-*,clang-analyzer-*,cppcoreguidelines-*,modernize-*,-modernize-use-trailing-return-type,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-pro-type-reinterpret-cast,-modernize-avoid-c-arrays
,-cppcoreguidelines-avoid-c-arrays, readability-duplicate-include, readability-identifier-naming, -cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-pro-type-union-access'
CheckOptions:
  - {key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor, value: true}
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassMethodCase, value: camelBack }
  - { key: readability-identifier-naming.VariableCase, value: camelBack }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m_ }
  - { key: readability-identifier-naming.PrivateMemberCase, value: camelBack }
  - { key: readability-identifier-naming.FunctionCase, value: camelBack }
  - { key: readability-identifier-naming.MethodCase, value: camelBack }
  - { key: readability-identifier-naming.ParameterCase, value: camelBack }
  - { key: readability-identifier-naming.MemberCase, value: camelBack }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase }
  - { key: readability-identifier-naming.TypeAliasCase, value: CamelCase }
  - { key: readability-identifier-naming.TypedefCase, value: CamelCase }
  - { key: readability-identifier-naming.ConstexprVariableCase, value: CamelCase}
  - { key: readability-identifier-naming.ConstexprVariablePrefix, value: k}
  - { key: readability-identifier-naming.ConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.ConstantPrefix, value: k }
  - { key: readability-identifier-naming.ConstantParameterCase, value: camelBack}
